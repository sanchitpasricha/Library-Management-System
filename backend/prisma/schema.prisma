// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  password      String
  role          String
  verified      Boolean        @default(false)
  deleted       Boolean        @default(false)
  borrowedBooks BorrowedBook[]
}

model Book {
  id          Int      @id @default(autoincrement())
  isbn        String   @unique
  title       String
  description String
  copies      Int
  deleted     Boolean  @default(false)
  categories  Category[]
  authors     Author[]
  borrowedBooks BorrowedBook[]
}

model BorrowedBook {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  book        Book     @relation(fields: [bookId], references: [id])
  bookId      Int
  borrowDate  DateTime
  returnDate  DateTime?
  fineAmount  Float    @default(0)
  Transaction Transaction[]
}

model Transaction {
  id              Int           @id @default(autoincrement())
  borrowedBook    BorrowedBook  @relation(fields: [borrowedBookId], references: [id])
  borrowedBookId  Int
  paymentDate     DateTime
  amountPaid      Float
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  books       Book[]
}

model Author {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  books       Book[]
}